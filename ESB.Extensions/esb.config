<?xml version="1.0" encoding="utf-8"?>
<!-- 
    ESB configuration file mapped using File provider
    Used as alternative to SSO configuration 
-->
<configuration>
  <configSections>
    <section name="esb" type="Microsoft.Practices.ESB.Configuration.ESBConfigurationSection, Microsoft.Practices.ESB.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    <section name="esb.resolver" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection,&#xA;                 Microsoft.Practices.Unity.Configuration, Version=1.2.0.0,&#xA;                 Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.1.0.0,Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    <section name="instrumentationConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.Configuration.InstrumentationConfigurationSection, Microsoft.Practices.EnterpriseLibrary.Common, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
  </configSections>
  <connectionStrings>
    <add name="ItineraryDb" connectionString="Data Source=localhost;Initial Catalog=EsbItineraryDb;Integrated Security=True"
      providerName="System.Data.SqlClient" />
    <add name="BAMEventSource" connectionString="Integrated Security=SSPI;Data Source=.;Initial Catalog=BizTalkMsgBoxDb"
      providerName="MES" />
  </connectionStrings>
  <!-- ESB configuration section -->

  <esb>
    <!-- validation settings used to validate the encryption X509 Certificate -->
    <x509CertificateAuthentication certificateValidationMode="ChainTrust" revocationMode="Online" />
    <bizTalkInformation schemaAssembly="Microsoft.BizTalk.GlobalPropertySchemas, Version=3.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    <adapterMgr cacheManager="Adapter Cache Manager" absoluteExpiration="3600" />
    <itineraryPipelineCache cacheManager="Itinerary Pipeline Cache Manager" absoluteExpiration="3600" />
    <resolvers cacheManager="Resolver Providers Cache Manager"   absoluteExpiration="3600">
      <resolver name="UDDI" type="Microsoft.Practices.ESB.Resolver.UDDI.ResolveProvider, Microsoft.Practices.ESB.Resolver.UDDI, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
        <resolverConfig>
          <add name="cacheTimeoutValue" value="120" />
          <add name="cacheName" value="UDDI Cache Manager" />
        </resolverConfig>
      </resolver>
      <resolver name="UDDI3" type="Microsoft.Practices.ESB.Resolver.UDDI3.ResolveProvider, Microsoft.Practices.ESB.Resolver.UDDI3, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
        <resolverConfig>
          <add name="cacheTimeoutValue" value="120" />
          <add name="cacheName" value="UDDI Cache Manager" />
          <add name="publisherKey" value="esb" />
          <add name="baseUri" value="http://localhost/uddi" />
          <add name="publishUriSuffix" value="/publish.asmx" />
          <add name="inquireUriSuffix" value="/inquire.asmx" />
        </resolverConfig>
      </resolver>
      <resolver name="UDDI3-SOASOFTWARE" type="Microsoft.Practices.ESB.Resolver.UDDI3.ResolveProvider, Microsoft.Practices.ESB.Resolver.UDDI3, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
        <resolverConfig>
          <add name="cacheTimeoutValue" value="120" />
          <add name="cacheName" value="UDDI Cache Manager" />
          <add name="publisherKey" value="esb" />
          <!--Format is uddi:{publisherkey}:runtimeresolution: (make sure to include colon at the end)-->
          <!--add name="esbKeyFormat" value="uddi:{0}:runtimeresolution:" /-->
          <add name="useUddiAuth" value="true" />
          <add name="baseUri" value="http://Biz-2K3-ESB.redmond.corp.microsoft.com:9901/uddi" />
          <add name="publishUriSuffix" value="/publish" />
          <add name="inquireUriSuffix" value="/inquiry" />
          <add name="securityUriSuffix" value="/security" />
          <add name="securityMode" value="None" />
          <add name="credentialType" value="None" />
          <add name="username" value="resolveruser" />
          <add name="password" value="password" />
        </resolverConfig>
      </resolver>
      <resolver name="XPATH" type="Microsoft.Practices.ESB.Resolver.XPATH.ResolveProvider, Microsoft.Practices.ESB.Resolver.XPATH, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <resolver name="STATIC" type="Microsoft.Practices.ESB.Resolver.STATIC.ResolveProvider, Microsoft.Practices.ESB.Resolver.STATIC, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <resolver name="BRE" type="Microsoft.Practices.ESB.Resolver.BRE.ResolveProvider, Microsoft.Practices.ESB.Resolver.BRE, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <resolver name="BRE2" type="ESB.Extensions.Resolution.BRE.BREResolutionProvider, ESB.Extensions.Resolution.BRE, Version=1.0.0.0, Culture=neutral, PublicKeyToken=70a94313e9b0b3df"/>
      <resolver name="UNITY" type="ESB.Extensions.Resolution.UNITY.UNITYResolutionProvider, ESB.Extensions.Resolution.UNITY, Version=1.0.0.0, Culture=neutral, PublicKeyToken=70a94313e9b0b3df"/>
      <resolver name="BRI" type="Microsoft.Practices.ESB.Resolver.Unity.ResolveProvider, Microsoft.Practices.ESB.Resolver.Unity, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" >
        <resolverConfig>
          <add name="unitySectionName" value="esb.resolver" />
          <add name="unityContainerName" value="BRI" />
        </resolverConfig>
      </resolver>
      <resolver name="ITINERARY" type="Microsoft.Practices.ESB.Resolver.Itinerary.StaticItineraryResolveProvider, Microsoft.Practices.ESB.Resolver.Itinerary, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
        <resolverConfig>
          <add name="connectionStringName" value="ItineraryDb" />
          <add name="cacheTimeout" value="120" />
          <add name="cacheManagerName" value="Itinerary Cache Manager" />
        </resolverConfig>
      </resolver>
      <resolver name="ITINERARY-STATIC" type="Microsoft.Practices.ESB.Resolver.Unity.ResolveProvider, Microsoft.Practices.ESB.Resolver.Unity, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
        <resolverConfig>
          <add name="unitySectionName" value="esb.resolver" />
          <add name="unityContainerName" value="ITINERARY" />
        </resolverConfig>
      </resolver>
      <resolver name="LDAP" type="Microsoft.Practices.ESB.Resolver.LDAP.ResolveProvider, Microsoft.Practices.ESB.Resolver.LDAP, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <resolver name="CONTEXT" type="Microsoft.Practices.ESB.Resolver.MessageContent.MessageContextResolver, Microsoft.Practices.ESB.Resolver.MessageContent, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    </resolvers>
    <adapterProviders cacheManager="Adapter Providers Cache Manager"   absoluteExpiration="3600">
      <adapterProvider name="WCF-WSHttp" type="Microsoft.Practices.ESB.Adapter.WcfWSHttp.AdapterProvider, Microsoft.Practices.ESB.Adapter.WcfWSHttp, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" moniker="Http,Https" />
      <adapterProvider name="WCF-BasicHttp" type="Microsoft.Practices.ESB.Adapter.WcfBasicHttp.AdapterProvider, Microsoft.Practices.ESB.Adapter.WcfBasicHttp, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" moniker="Http,Https" />
      <adapterProvider name="WCF-Custom" type="Microsoft.Practices.ESB.Adapter.WcfCustom.AdapterProvider, Microsoft.Practices.ESB.Adapter.WcfCustom, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" moniker="mssql" />
      <adapterProvider name="SMTP" type="Microsoft.Practices.ESB.Adapter.SMTP.AdapterProvider, Microsoft.Practices.ESB.Adapter.SMTP, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" moniker="smtp" />
      <adapterProvider name="FTP" type="Microsoft.Practices.ESB.Adapter.FTP.AdapterProvider, Microsoft.Practices.ESB.Adapter.FTP, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
        <adapterConfig>
          <add name="DefaultUsername" value="anonymous" />
          <add name="DefaultPassword" value="" />
        </adapterConfig>
      </adapterProvider>
      <adapterProvider name="MQSeries" type="Microsoft.Practices.ESB.Adapter.MQSeries.AdapterProvider, Microsoft.Practices.ESB.Adapter.MQSeries, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" moniker="MQS" adapterAssembly="MQSeries, Version=2.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <adapterProvider name="FILE" type="Microsoft.Practices.ESB.Adapter.FILE.AdapterProvider, Microsoft.Practices.ESB.Adapter.FILE, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" moniker="File" />
    </adapterProviders>
    <itineraryServices cacheManager="Itinerary Services Cache Manager" absoluteExpiration="3600">
      <itineraryService id="6a594d80-91f7-4e10-a203-b3c999b0f55e" name="Microsoft.Practices.ESB.Services.Routing" type="Microsoft.Practices.ESB.Itinerary.Services.RoutingService, Microsoft.Practices.ESB.Itinerary.Services, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" scope="Messaging"
     stage="AllReceive"/>
      <itineraryService id="774488bc-e5b9-4a4e-9ae7-d25cdf23fd1c" name="Microsoft.Practices.ESB.Services.Routing" type="Microsoft.Practices.ESB.Agents.Delivery, Microsoft.Practices.ESB.Agents, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" scope="Orchestration"
     stage="None"/>
      <itineraryService id="cfbe36c5-d85c-44e9-9549-4a7abf2106c5" name="Microsoft.Practices.ESB.Services.Transform" type="Microsoft.Practices.ESB.Itinerary.Services.TransformationService, Microsoft.Practices.ESB.Itinerary.Services, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" scope="Messaging"
     stage="All" />
      <itineraryService id="92d3b293-e6d4-44a1-b27d-c42b48aec667" name="Microsoft.Practices.ESB.Services.Transform" type="Microsoft.Practices.ESB.Agents.Transform, Microsoft.Practices.ESB.Agents, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" scope="Orchestration"
     stage="None"/>
      <itineraryService id="977f085f-9f6d-4c18-966f-90bed114f649" name="Microsoft.Practices.ESB.Services.SendPort" type="Microsoft.Practices.ESB.Itinerary.Services.SendPortService, Microsoft.Practices.ESB.Itinerary.Services, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" scope="Invocation"
     stage="AllReceive" />
      <itineraryService id="4810569C-8FF2-4162-86CE-47692A0B4017" name="Microsoft.Practices.ESB.Itinerary.Services.Broker.MessagingBroker" type="Microsoft.Practices.ESB.Itinerary.Services.Broker.MessagingBroker, Microsoft.Practices.ESB.Itinerary.Services.Broker, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" scope="Messaging"  stage="All" serviceCategory="Broker" />
    </itineraryServices>
    <filters cacheManager="Filter Cache Manager"   absoluteExpiration="3600">
      <filter name="XPATH" type="Microsoft.Practices.ESB.Filters.XPath.XPathFilter, Microsoft.Practices.ESB.Filters.XPath, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
      </filter>
    </filters>
    <itineraryOM cacheManager="ItineraryOM Cache Manager" absoluteExpiration="3600">
      <add name="Itinerary" namespace="http://schemas.microsoft.biztalk.practices.esb.com/itinerary" type="Microsoft.Practices.ESB.Itinerary.OM.V1.ItineraryV1, Microsoft.Practices.ESB.Itinerary.OM.V1, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    </itineraryOM>
    <extendedConfig>
      <add name="CustomSetting" value="BRI" />
    </extendedConfig>
  </esb>
  <!-- BRE configuration section-->
  <esb.resolver>
    <typeAliases>
      <!-- Lifetime manager types -->
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity, Version=1.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <!-- std type providers -->
      <typeAlias alias="string" type="System.String, mscorlib"/>
      <typeAlias alias="int" type="System.Int32, mscorlib"/>
      <typeAlias alias="bool" type="System.Boolean, mscorlib"/>
      <!-- repository providers -->
      <typeAlias alias="IRepositoryProvider" type="Microsoft.Practices.ESB.Resolver.Itinerary.Facts.Repository.IRepositoryProvider, Microsoft.Practices.ESB.Resolver.Itinerary.Facts, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <typeAlias alias="SqlRepositoryProvider" type="Microsoft.Practices.ESB.Resolver.Itinerary.DataAccess.SqlRepositoryProvider, Microsoft.Practices.ESB.Resolver.Itinerary.DataAccess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <!-- fact providers -->
      <typeAlias alias="IFactProvider" type="Microsoft.Practices.ESB.Resolver.Facts.IFactProvider, Microsoft.Practices.ESB.Resolver.Facts, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <typeAlias alias="IFactTranslator" type="Microsoft.Practices.ESB.Resolver.Facts.IFactTranslator, Microsoft.Practices.ESB.Resolver.Facts, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <typeAlias alias="ItineraryFactProvider" type="Microsoft.Practices.ESB.Resolver.Itinerary.Facts.ItineraryFactProvider, Microsoft.Practices.ESB.Resolver.Itinerary.Facts, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <typeAlias alias="ItineraryStaticFactProvider" type="Microsoft.Practices.ESB.Resolver.Itinerary.Facts.ItineraryStaticFactProvider, Microsoft.Practices.ESB.Resolver.Itinerary.Facts, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <typeAlias alias="ItineraryHeaderFactProvider" type="Microsoft.Practices.ESB.Resolver.Itinerary.Facts.ItineraryHeaderFactProvider, Microsoft.Practices.ESB.Resolver.Itinerary.Facts, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <typeAlias alias="ItineraryContentsFactProvider" type="Microsoft.Practices.ESB.Resolver.Itinerary.Facts.ItineraryContentsFactProvider, Microsoft.Practices.ESB.Resolver.Itinerary.Facts, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <typeAlias alias="ResolutionFactProvider" type="Microsoft.Practices.ESB.Resolver.Itinerary.Facts.ResolutionFactProvider, Microsoft.Practices.ESB.Resolver.Itinerary.Facts, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <typeAlias alias="DefaultFactTranslator" type="Microsoft.Practices.ESB.Resolver.Facts.DefaultFactTranslator, Microsoft.Practices.ESB.Resolver.Facts, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <typeAlias alias="ItineraryFactTranslator" type="Microsoft.Practices.ESB.Resolver.Itinerary.Facts.ItineraryFactTranslator, Microsoft.Practices.ESB.Resolver.Itinerary.Facts, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <typeAlias alias="ItineraryContentsFactTranslator" type="Microsoft.Practices.ESB.Resolver.Itinerary.Facts.ItineraryContentsFactTranslator, Microsoft.Practices.ESB.Resolver.Itinerary.Facts, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <!-- resolve providers -->
      <typeAlias alias="IResolveProvider" type="Microsoft.Practices.ESB.Resolver.IResolveProvider, Microsoft.Practices.ESB.Resolver, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
      <typeAlias alias="ItineraryResolveProvider" type="Microsoft.Practices.ESB.Resolver.Itinerary.BREItineraryResolverContainer,Microsoft.Practices.ESB.Resolver.Itinerary, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 "/>
      <typeAlias alias="StaticItineraryResolveProvider" type="Microsoft.Practices.ESB.Resolver.Itinerary.StaticItineraryResolveContainer,Microsoft.Practices.ESB.Resolver.Itinerary, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 "/>
    </typeAliases>
    <!-- test containers -->
    <containers>
      <container name="BRI">
        <types>
          <type type="IResolveProvider" mapTo="ItineraryResolveProvider" />
          <type type="IFactProvider" mapTo="ItineraryFactProvider" name="ItineraryFactProvider">
            <lifetime type="singleton" />
          </type>
          <type type="IRepositoryProvider" mapTo="SqlRepositoryProvider" name="CurrentRepositoryProvider">
            <lifetime type="singleton" />
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement,Microsoft.Practices.Unity.Configuration, Version=1.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
              <constructor>
                <param name="connectionStringName" parameterType="string">
                  <value value="ItineraryDb"/>
                </param>
                <param name="cacheManagerName" parameterType="string">
                  <value value="Itinerary Cache Manager"/>
                </param>
                <param name="cacheTimeout" parameterType="string">
                  <value value="120" />
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IFactTranslator" mapTo="DefaultFactTranslator" name="DefaultFactTranslator">
            <lifetime type="singleton" />
          </type>
          <type type="IFactTranslator" mapTo="ItineraryFactTranslator" name="ItineraryFactTranslator">
            <lifetime type="singleton" />
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement,Microsoft.Practices.Unity.Configuration, Version=1.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
              <constructor>
                <param name="repositoryProvider" parameterType="IRepositoryProvider">
                  <dependency name="CurrentRepositoryProvider"/>
                </param>
              </constructor>
            </typeConfig>
          </type>
        </types>
      </container>
      <container name="ITINERARY">
        <types>
          <type type="IResolveProvider" mapTo="StaticItineraryResolveProvider" />
          <type type="IRepositoryProvider" mapTo="SqlRepositoryProvider" name="CurrentRepositoryProvider">
            <lifetime type="singleton" />
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement,Microsoft.Practices.Unity.Configuration, Version=1.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
              <constructor>
                <param name="connectionStringName" parameterType="string">
                  <value value="ItineraryDb"/>
                </param>
                <param name="cacheManagerName" parameterType="string">
                  <value value="Itinerary Cache Manager"/>
                </param>
                <param name="cacheTimeout" parameterType="string">
                  <value value="120" />
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IFactProvider" mapTo="ResolutionFactProvider" name="ResolutionFactProvider"  />
          <type type="IFactProvider" mapTo="ItineraryHeaderFactProvider" name="HeaderFactProvider"  />
          <type type="IFactProvider" mapTo="ItineraryStaticFactProvider" name="StaticFactProvider"  />
          <type type="IFactProvider" mapTo="ItineraryContentsFactProvider" name="ItineraryContentsFactProvider"  />
          <type type="IFactTranslator" mapTo="DefaultFactTranslator" name="DefaultFactTranslator">
            <lifetime type="singleton" />
          </type>
          <type type="IFactTranslator" mapTo="ItineraryFactTranslator" name="ItineraryFactTranslator">
            <lifetime type="singleton" />
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement,Microsoft.Practices.Unity.Configuration, Version=1.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
              <constructor>
                <param name="repositoryProvider" parameterType="IRepositoryProvider">
                  <dependency name="CurrentRepositoryProvider"/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IFactTranslator" mapTo="ItineraryContentsFactTranslator" name="ItineraryContentsFactTranslator">
            <lifetime type="singleton" />
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement,Microsoft.Practices.Unity.Configuration, Version=1.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
              <constructor>
                <param name="overrideExistingItinerary" parameterType="bool">
                  <value value="False" type="bool" />
                </param>
              </constructor>
            </typeConfig>
          </type>
        </types>
      </container>
    </containers>
  </esb.resolver>
  <!-- Instrumentation Configuration Section -->
  <instrumentationConfiguration performanceCountersEnabled="false" eventLoggingEnabled="false" wmiEnabled="false" applicationInstanceName="" />
  <!-- Caching ConfigurationSection -->
  <cachingConfiguration defaultCacheManager="Default Cache Manager">
    <backingStores>
      <add name="inMemory"
    type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.1.0.0,Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    </backingStores>
    <cacheManagers>
      <add name="Default Cache Manager"
    type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.1.0.0,Culture=neutral, PublicKeyToken=31bf3856ad364e35"
    expirationPollFrequencyInSeconds="60"
    maximumElementsInCacheBeforeScavenging="1000"
    numberToRemoveWhenScavenging="10"
    backingStoreName="inMemory" />
      <add name="Itinerary Cache Manager"
    type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.1.0.0,Culture=neutral, PublicKeyToken=31bf3856ad364e35"
    expirationPollFrequencyInSeconds="60"
    maximumElementsInCacheBeforeScavenging="1000"
    numberToRemoveWhenScavenging="10"
    backingStoreName="inMemory" />
      <add name="UDDI Cache Manager"
    type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.1.0.0,Culture=neutral, PublicKeyToken=31bf3856ad364e35"
    expirationPollFrequencyInSeconds="2"
    maximumElementsInCacheBeforeScavenging="1000"
    numberToRemoveWhenScavenging="10"
    backingStoreName="inMemory" />
      <add name="Resolver Providers Cache Manager"
   type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.1.0.0,Culture=neutral, PublicKeyToken=31bf3856ad364e35"
   expirationPollFrequencyInSeconds="60"
   maximumElementsInCacheBeforeScavenging="1000"
   numberToRemoveWhenScavenging="10"
   backingStoreName="inMemory" />
      <add name="Adapter Providers Cache Manager"
   type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.1.0.0,Culture=neutral, PublicKeyToken=31bf3856ad364e35"
   expirationPollFrequencyInSeconds="60"
   maximumElementsInCacheBeforeScavenging="1000"
   numberToRemoveWhenScavenging="10"
   backingStoreName="inMemory" />
      <add name="Adapter Cache Manager"
    type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.1.0.0,Culture=neutral, PublicKeyToken=31bf3856ad364e35"
    expirationPollFrequencyInSeconds="60"
    maximumElementsInCacheBeforeScavenging="1000"
    numberToRemoveWhenScavenging="10"
    backingStoreName="inMemory" />
      <add name="Itinerary Pipeline Cache Manager"
   type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.1.0.0,Culture=neutral, PublicKeyToken=31bf3856ad364e35"
   expirationPollFrequencyInSeconds="60"
   maximumElementsInCacheBeforeScavenging="1000"
   numberToRemoveWhenScavenging="10"
   backingStoreName="inMemory" />
      <add name="Itinerary Services Cache Manager"
     type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.1.0.0,Culture=neutral, PublicKeyToken=31bf3856ad364e35"
     expirationPollFrequencyInSeconds="60"
     maximumElementsInCacheBeforeScavenging="1000"
     numberToRemoveWhenScavenging="10"
     backingStoreName="inMemory" />
      <add name="ItineraryOM Cache Manager"
       type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.1.0.0,Culture=neutral, PublicKeyToken=31bf3856ad364e35"
       expirationPollFrequencyInSeconds="60"
       maximumElementsInCacheBeforeScavenging="1000"
       numberToRemoveWhenScavenging="10"
       backingStoreName="inMemory" />
      <add name="Filter Cache Manager"
       type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.1.0.0,Culture=neutral, PublicKeyToken=31bf3856ad364e35"
       expirationPollFrequencyInSeconds="60"
       maximumElementsInCacheBeforeScavenging="1000"
       numberToRemoveWhenScavenging="10"
       backingStoreName="inMemory" />
    </cacheManagers>
  </cachingConfiguration>
</configuration>
